<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="en-us" xmlns="http://www.w3.org/2005/Atom">
 <title>cl-blog-generatorcl-blog-generator Development Blog : benchmarking</title>
 <id>http://hugoduncan.github.com/cl-blog-generator/http://hugoduncan.github.com/cl-blog-generator/content/site/tag/benchmarking.xhtml</id>
 <link href="./"/>
 <link href="" rel="self"/>
 <logo>rsslogo.jpg</logo>
 <icon>/favicon.ico</icon>
 <author><name>Hugo Duncan</name></author>
 <subtitle>Development Blog</subtitle>
 <rights>All content written by Hugo Duncan and photos by Hugo Duncan Copyright Hugo Duncan, all rights reserved.</rights>
 <updated>2010-02-19T16:15:05.992179-05:00</updated>

<entry xml:base="http://hugoduncan.github.com/cl-blog-generator/content/site/"><title>Benchmarking Clojure Code with Criterium</title><link href="http://hugoduncan.github.com/cl-blog-generator/content/site/post/2010/benchmarking_clojure_code_with_criterium.xhtml"/><id>http://hugoduncan.github.com/cl-blog-generator/content/site/post/2010/benchmarking_clojure_code_with_criterium.xhtml</id><published>2010-02-18T19:00:00.000000-05:00</published><updated>2010-02-18T19:00:00.000000-05:00</updated><published>2010-02-18T19:00:00.000000-05:00</published><category scheme="http://hugoduncan.github.com/cl-blog-generator/content/site/tags" term="jvm"/><category scheme="http://hugoduncan.github.com/cl-blog-generator/content/site/tags" term="criterium"/><category scheme="http://hugoduncan.github.com/cl-blog-generator/content/site/tags" term="benchmarking"/><category scheme="http://hugoduncan.github.com/cl-blog-generator/content/site/tags" term="benchmark"/><category scheme="http://hugoduncan.github.com/cl-blog-generator/content/site/tags" term="clojure"/><summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I have released <a href="http://github.com/hugoduncan/criterium">Criterium</a>, a new project for benchmarking code in <a href="http://clojure.org">Clojure</a>.  I found Brent Broyer's <a href="http://www.ibm.com/developerworks/java/library/j-benchmark1.html">article on Java benchmarking</a> which explains many of the pitfalls of benchmarking on the JVM, and <a href="http://www.serpentine.com/blog/2009/09/29/criterion-a-new-benchmarking-library-for-haskell">Criterion</a>, a benchmarking library in Haskell.</p></div></summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I have released <a href="http://github.com/hugoduncan/criterium">Criterium</a>, a new project for benchmarking code in <a href="http://clojure.org">Clojure</a>.  I found Brent Broyer's <a href="http://www.ibm.com/developerworks/java/library/j-benchmark1.html">article on Java benchmarking</a> which explains many of the pitfalls of benchmarking on the JVM, and <a href="http://www.serpentine.com/blog/2009/09/29/criterion-a-new-benchmarking-library-for-haskell">Criterion</a>, a benchmarking library in Haskell.</p>

<p>The main issues with benchmarking on the JVM are associated with garbage collection, and with JIT compilation.  It seems from Broyer's articles that we can mitigate the effects but not completely eliminate them, and Criterium follows his advice.  Both of the above libraries use the <a href="http://en.wikipedia.org/wiki/Bootstrapping_(statistics)">bootstrap</a> technique to estimate mean execution time and provide a confidence interval, and Criterium does likewise.  At the moment the confidence intervals are biased and I still need to implement BCa or ABC to improve these.</p>

<p>One of the functions that I wanted to benchmark originally involved reading a file.  Criterium does not yet address clearing I/O buffer cache, and I am not sure on the best way forward on this.  On Mac OS X, the <code>purge</code> command can be used to clear the caches, and on Linux this can be achieved by writing to /proc/sys/vm/drop_caches.  On the Mac at least, this causes everything to grind to halt for about five seconds, and there are then some file reads as whatever processes are running read things in again. This sort of behaviour doesn't lend itself to inclusion in a timing loop... Any suggestions?</p>
</div></content></entry></feed>